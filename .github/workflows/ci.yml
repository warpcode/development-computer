---
name: CI
"on":
  workflow_dispatch:
  pull_request:
    paths:
      # - ".github/workflows/ci.yml"
      - "roles/**"
      - "molecule/**"
  push:
    branches:
      - main
    paths:
      # - ".github/workflows/ci.yml"
      - "roles/**"
      - "molecule/**"
  schedule:
    # Run on the first of the month at midnight
    - cron: "0 0 1 * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: "warpcode.development-computer"

jobs:
  ansiblelint:
    name: Ansible Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path: "warpcode.development-computer"

      - name: Set up Python 3.
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"

      - uses: actions/cache@v4
        id: venv-cache
        with:
          path: warpcode.development-computer/.venv/
          key: ansiblelint-venv-cache-${{ hashFiles('warpcode.development-computer/requirements.txt') }}
          restore-keys: |
            ansiblelint-venv-cache-

      - name: Install test dependencies.
        if: steps.venv-cache.outputs.cache-hit != 'true'
        run: make setup

      - name: Lint code.
        run: |
          make lint

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    needs:
      - ansiblelint
    strategy:
      max-parallel: 4
      fail-fast: true
      matrix:
        os:
          - archlinux:latest
          - debian:stable
          - fedora:latest
          - ubuntu:latest
        scenario:
          - default
          - visual_studio_code
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path: "warpcode.development-computer"

      - name: Set up Python 3.
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - uses: actions/cache@v4
        id: venv-cache
        with:
          path: warpcode.development-computer/.venv/
          key: ${{ matrix.os }}-venv-cache-${{ hashFiles('warpcode.development-computer/requirements.txt') }}
          restore-keys: |
            ${{ matrix.os }}-venv-cache-

      - name: Install test dependencies.
        if: steps.venv-cache.outputs.cache-hit != 'true'
        run: make setup

      - name: Changed Molecule test
        run: make test-$SCENARIO
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          SCENARIO: ${{ matrix.scenario }}
          MOLECULE_DISTRO: ${{ matrix.os }}
