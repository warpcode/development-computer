---
- name: Include OS-specific variables
  ignore_errors: true
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family }}/{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}/main.yml"
    - "{{ ansible_system }}.yml"
  loop_control:
    loop_var: item

- name: Install (Linux)
  become: true
  ansible.builtin.package:
    name: "{{ _devops_vagrant_packages }}"
  when:
    - ansible_system == "Linux"

- name: Install (MacOs)
  community.general.homebrew:
    name: "{{ _devops_vagrant_packages }}"
  when:
    - ansible_system == "Darwin"

- name: Install (Windows)
  become: true
  chocolatey.chocolatey.win_chocolatey:
    name: "{{ _devops_vagrant_packages }}"
  when:
    - ansible_system == "Win32NT"

- name: Get list of installed vagrant plugins
  changed_when: false
  failed_when: false
  ansible.builtin.command:
    argv:
      - vagrant
      - plugin
      - list
  register: _vagrant_plugins_list_output

- name: Install vagrant plugins
  changed_when: "'Installed the plugin' in _vagrant_plugins_output.stdout"
  failed_when:
    - _vagrant_plugins_output.rc > 0
    - "'already an installed extension' not in _vagrant_plugins_output.stderr"
  ansible.builtin.command:
    argv:
      - vagrant
      - plugin
      - install
      - "{{ extension }}"
  when:
    - extension not in _vagrant_plugins_list_output.stdout
    - extension != ''
  register: _vagrant_plugins_output
  loop: "{{ devops_vagrant_plugins }}"
  loop_control:
    loop_var: extension
